datasource db{
  provider = "mongodb"
  url = env("DATABASE_URL")
}

generator client{
  provider = "prisma-client-js"
}

model Account{
id String @id @default(auto()) @map("_id") @db.ObjectId 
userId String @db.ObjectId
type String
provider String
providerAccountId String
refresh_token String?
access_token String?
expires_at Int?
token_type String?
scope String?
id_token String?
session_state String?

user User @relation(fields: [userId],references: [id],onDelete: Cascade)

@@unique([provider,providerAccountId])
}

model Session{
id String @id @default(auto()) @map("_id") @db.ObjectId 
sessionToken String @unique
userId String @db.ObjectId
expires DateTime
user User @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String
  // role           String    @default("customer") 

  accounts       Account[]
  sessions       Session[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Product{
id String @id @default(auto()) @map("_id") @db.ObjectId
title String 
description String
thumbnail String
price Float
stock Int 
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
categoryId String @db.ObjectId
category Category @relation(fields: [categoryId],references: [id]) 
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
  thumbnail String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
}
// model Cart{
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   products Product[]
//   user User?
// }
